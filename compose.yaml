services:
  # use nginx
  nginx:
    container_name: nginx-proxy
    ports: 
      - 80:80
      - 443:443
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./configs/nginx/www:/var/www
    env_file:
      - ./envs/nginx.env
    depends_on:
      - pds
    networks:
      # Webプロクシはフロントエンドネットワークのみ
      - frontend
  pds:
    container_name: pds
    image: ghcr.io/bluesky-social/pds:latest
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./data
        target: /pds
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    env_file:
      - ./envs/pds.env
    networks:
      - frontend
      - backend
  
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    restart: unless-stopped
    environment:
      WATCHTOWER_CLEANUP: 1
      WATCHTOWER_SCHEDULE: "@midnight"

# docker network
networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.10.0/24
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.20.0/24
